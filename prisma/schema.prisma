generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id         Int       @id @default(autoincrement())
  apiId      Int       @unique
  date       DateTime  @db.Timestamptz(6)
  homeScore  Int
  awayScore  Int
  season     Int
  period     Int
  status     String    @db.VarChar(20)
  time       String    @db.VarChar(256)
  postseason Boolean
  homeTeamId Int
  awayTeamId Int
  awayTeam   Team      @relation("awayTeamRelation", fields: [awayTeamId], references: [id])
  homeTeam   Team      @relation("homeTeamRelation", fields: [homeTeamId], references: [id])
  lastSync   DateTime?
}

model GameSyncHistory {
  id                 Int       @id @default(autoincrement())
  dateFetchStarted   DateTime  @db.Timestamptz(6)
  dateFetchEnded     DateTime? @db.Timestamptz(6)
  latestDayFinalized DateTime? @db.Date()
  status             String    @db.VarChar(256)
  season             Int       @default(2023)
  gamesUpdatedApiIds Int[]
}

model Owner {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(50)
  username    String        @unique @db.VarChar(50)
  seasonDraft SeasonDraft[] @relation("draftOwnerRelation")
  winsPool    WinsPool[]    @relation("poolOwnersRelation")
}

model TeamSeasonStats {
  id     Int  @id @default(autoincrement())
  season Int
  teamId Int
  wins   Int
  losses Int
  score  Int
  team   Team @relation("teamStatsRelation", fields: [teamId], references: [id])
}

model WinsPool {
  id     Int          @id @default(autoincrement())
  name   String       @unique @db.VarChar(50)
  season Int
  owners Owner[]      @relation("poolOwnersRelation")
  draft  SeasonDraft[]
}

model SeasonDraft {
  id         Int      @id @default(autoincrement())
  season     Int
  ownerId    Int
  winsPoolId Int      
  teams      Team[]
  owner      Owner    @relation("draftOwnerRelation", fields: [ownerId], references: [id])
  winsPool   WinsPool @relation(fields: [winsPoolId], references: [id])
  @@unique([ownerId, winsPoolId])
}

model SeasonMeta {
  id Int @id @default(autoincrement())
  season Int
  regularSeasonStart DateTime
  regularSeasonEnd DateTime @default("2024-01-01T00:00:00.000+00:00")
}

model Team {
  id              Int               @id @default(autoincrement())
  abbreviation    String            @db.VarChar(5)
  city            String            @db.VarChar(30)
  conference      String            @db.VarChar(30)
  division        String            @db.VarChar(30)
  fullName        String            @db.VarChar(50)
  name            String            @unique @db.VarChar(30)
  awayGames       Game[]            @relation("awayTeamRelation")
  homeGames       Game[]            @relation("homeTeamRelation")
  teamSeasonStats TeamSeasonStats[] @relation("teamStatsRelation")
  seasonDrafts    SeasonDraft[]
}
