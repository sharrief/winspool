generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id         Int      @id @default(autoincrement())
  apiId      Int      @unique
  date       DateTime @db.Timestamptz(6)
  homeScore  Int
  awayScore  Int
  season     Int
  period     Int
  status     String   @db.VarChar(20)
  time       String   @db.VarChar(256)
  postseason Boolean
  homeTeamId Int
  awayTeamId Int
  awayTeam   Team     @relation("awayTeamRelation", fields: [awayTeamId], references: [id])
  homeTeam   Team     @relation("homeTeamRelation", fields: [homeTeamId], references: [id])
}

model Owner {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(50)
  username    String        @db.VarChar(50) @unique
  SeasonDraft SeasonDraft[] @relation("draftOwnerRelation")
}

model TeamSeasonStats {
  id       Int  @id @default(autoincrement())
  season   Int
  teamId   Int
  wins     Int
  losses   Int
  ties     Int
  score    Int
  team     Team @relation("teamStatsRelation", fields: [teamId], references: [id])
}

model SeasonDraft {
  id      Int    @id @default(autoincrement())
  season  Int
  ownerId Int
  teams   Team[]
  owner   Owner  @relation("draftOwnerRelation", fields: [ownerId], references: [id])
}

model Team {
  id              Int               @id @default(autoincrement())
  abbreviation    String            @db.VarChar(5)
  city            String            @db.VarChar(30)
  conference      String            @db.VarChar(30)
  division        String            @db.VarChar(30)
  fullName        String            @db.VarChar(50)
  name            String            @db.VarChar(30) @unique
  awayGames       Game[]            @relation("awayTeamRelation")
  homeGames       Game[]            @relation("homeTeamRelation")
  teamSeasonStats TeamSeasonStats[] @relation("teamStatsRelation")
  seasonDrafts    SeasonDraft[]
}
